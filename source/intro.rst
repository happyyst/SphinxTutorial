1. 简介
=====





轻量级标记语法
-------

**轻量级标记语言** 是一种 *语法简单* 的标记语言。
它使用易于理解的格式标记，没有古怪的 `<标签>` 。

- 可以使用最简单的文本编辑器编辑。
- 所见即所得，非技术控亦可直接阅读源码。
- 可版本控制。
- 实现单一源文件出版。



* 使用html实现

.. code-block:: html

    <body>
      <h1 id='id1'>轻量级标记语言</h1>
      <p><strong>轻量级标记语言</strong> 是一种 <em>语法简单</em> 的标记语言。
      它使用易于理解的格式标记，没有古怪的 <code>&lt;标签&gt;</code> 。</p>
      <ul>
      <li>可以使用最简单的文本编辑器编辑。</li>
      <li>所见即所得，非技术控亦可直接阅读源码。</li>
      <li>可版本控制。</li>
      <li>实现单一源文件出版。</li>
      </ul>
    <body>

* 使用reST实现
::

    **轻量级标记语言** 是一种 *语法简单* 的标记语言。
    它使用易于理解的格式标记，没有古怪的 `<标签>` 。

    - 可以使用最简单的文本编辑器编辑。
    - 所见即所得，非技术控亦可直接阅读源码。
    - 可版本控制。
    - 实现单一源文件出版。


reST和MarkDown
-------------



关于sphinx
--------

Sphinx 是一种工具，它允许开发人员以纯文本格式编写文档，以便采用满足不同需求的格式轻松生成输出。
这在使用VCS追踪变更时非常有用。纯文本文档对不同系统之间的协作者也非常有用。纯文本是当前可以采用的最便捷的格式之一。
虽然Sphinx是用Python编写的，并且最初是为Python语言文档而创建，但它并不一定是以语言为中心，在某些情况下，甚至不是以程序员为中心。
Sphinx有许多用处，比如可以用它来编写整本书！
可以将Sphinx想像成为一种文档框架：它会抽象化比较单调的部分，并提供自动函数来解决一些常见问题，比如突出显示标题索引和特殊代码（在显示代码示例时），以及突出显示适当的语法。

Sphinx 使用 reStructuredText 标记语法（和其他一些语法）来提供文档控制, 可以输出pdf, html等格式的文档